<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace和定义的Mapper接口对应，并实现其中的方法 -->
<mapper namespace="cn.edu.gdut.mapper.StatusMapper">
	<resultMap type="StatusModel" id="StatusModelMap">
		<result property="createTime" column="create_time"/>
		<result property="judgeTime" column="judge_time"/>
		<result property="runMemory" column="run_memory"/>
		<result property="runTime"  column="run_time"/>
		<result property="codeLength" column="code_length"/>
		<result property="judgeName" column="judge_name"/>
		<result property="compileInfo" column="compile_info"/>
	</resultMap>
	
	<insert id="insert" parameterType="StatusModel">
		INSERT INTO status
			(pid,code,language,username,create_time,code_length,cid)
		VALUES
			(#{pid},#{code},#{language},#{username},now(),#{codeLength},#{cid})
	</insert>
	
	<insert id="mork" parameterType="StatusModel">
		INSERT INTO status
			(pid,code,language,username,code_length,cid,create_time)
		VALUES
			(#{pid},#{code},#{language},#{username},#{codeLength},#{cid},#{createTime})
	</insert>
	
	<update id="judged" parameterType="StatusModel">
		UPDATE status
		SET
			judge_time = now(),
			status = #{status},
			run_memory = #{runMemory},
			run_time = #{runTime},
			compile_info = #{compileInfo},
			judge_name = #{judgeName}
		WHERE
			id = #{id} 
			and status in ('Pending','Running','Repending')
	</update>
	
	<select id="selectById" parameterType="java.lang.Integer" resultMap="StatusModelMap">
		SELECT
			id,pid,language,code_length,username,status,create_time,judge_time,run_memory,run_time,cid
		FROM 
			status
		WHERE
			id = #{rid}
	</select>
	
	<select id="selectByQuery" parameterType="StatusQuery" resultMap="StatusModelMap">
		SELECT
			id,pid,language,code_length,username,status,create_time,judge_time,run_memory,run_time,cid
		FROM 
			status
		WHERE
		is_delete = 0
		<if test="username != null and username != ''">
			and username = #{username}
		</if>
		<if test="language != null and language != ''">
			and language = #{language}
		</if>
		<if test="status != null and status != ''">
			and status = #{status}
		</if>
		<if test="pid != null">
			and pid = #{pid}
		</if>
		<if test="cid == null or cid ==''">
			and cid is null
		</if>
		<if test="cid != null and cid != ''">
			and cid = #{cid}
		</if>
		ORDER BY
			id desc
		LIMIT 
			#{beginIndex},#{pageSize}	
	</select>
	
	<select id="selectNumberByQuery" parameterType="StatusQuery" resultType="java.lang.Integer">
		SELECT count(id) FROM status
		WHERE
		is_delete = 0
		<if test="username != null">
			and username = #{username}
		</if>
		<if test="language != null">
			and language = #{language}
		</if>
		<if test="status != null">
			and status = #{status}
		</if>
		<if test="pid != null">
			and pid = #{pid}
		</if>
		<if test="cid == null or cid ==''">
			and cid is null
		</if>
		<if test="cid != null and cid != ''">
			and cid = #{cid}
		</if>
	</select>
	
	<select id="selectForRanklist" parameterType="java.lang.Integer" resultMap="StatusModelMap">
		SELECT
			pid,username,status,create_time
		FROM
			status
		WHERE
			cid=#{cid}
		ORDER BY
			username,create_time
	</select>
	
	<select id="getForJudge" resultType="JudgeModel">
		SELECT
			b.id as pid,
			b.time_limit as timeLimit,
			b.mem_limit as memLimit,
			b.is_spj as isSpj,
			a.id as rid,
			a.code as code,
			a.language as language
		FROM 
			status a,problem b
		WHERE
			a.pid = b.id
			and a.status in ('Pending','Repending')
		ORDER BY 
			a.id
		LIMIT 100
	</select>
	
	<select id="getCode" parameterType="Integer" resultMap="StatusModelMap">
		SELECT 
			id,pid,status,run_time,run_memory,code,username,language,create_time,cid,compile_info
		FROM
			status
		WHERE
			id = #{rid}
	</select>
	
	<update id="reJudge" parameterType="RejudgeQuery">
		UPDATE
			status
		SET
			status = 'Repending',
			run_time = null,
			run_memory = null,
			compile_info = null,
			judge_name = null
		WHERE
			is_delete = 0
			and status != 'Pending'
		<!-- 防止误操作导致全部数据rj -->
		<if test="rid == null and pid == null">
			and 1 = 0
		</if>
		<if test="rid != null">
			and rid = #{rid}
		</if>
		<if test="pid != null">
			and pid = #{pid}
		</if>
		<if test="cid == -1">
			and cid IS NULL
		</if>
		<if test="cid > 0">
			and cid = #{cid}
		</if>
		<if test="includeAc != true">
			and status != 'Accepted'
		</if>
	</update>
	
	<select id="count" parameterType="StatusCountQuery" resultType="StatusCountModel">
		SELECT 
			pid,status,count(id) as cnt
		FROM 
			status
		WHERE
			is_delete = 0
			and cid is null 
			<if test="username != null">
				and username = #{username}
			</if>
			<if test="pidList != null">
				and pid in 
				<foreach collection="pidList" item="item" open="(" separator="," close=")">
	   				#{item}
	  			</foreach>
			</if>
		GROUP BY 
			pid,status
		ORDER BY
			pid
			<if test="orderDesc">
				DESC
			</if>
	</select>
	
	<select id="getAcByUsername" parameterType="String" resultType="Integer">
		SELECT
			distinct pid
		FROM
			status
		WHERE
			is_delete = 0 and
			cid IS NULL and
			status = 'Accepted' and
			username = #{username}
	</select>
</mapper>